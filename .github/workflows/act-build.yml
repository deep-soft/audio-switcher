# 2024-07-26 06:30
name: Build release

on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
  workflow_dispatch:

env:
  PROG_NAME: "AudioSwitcher"
  TAG_NAME: "AudioSwitcher"
  Prog_version: "1.0.0"

jobs:
#------------------------------------------------------------------------------
  build-msbuild:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        build: [
          msbuild_cl_x86_release
        ]
        include:
          - { build: msbuild_cl_x86_release, compiler: msbuild_cl, arch: x86, platform_sln: '"Any CPU"', platform_name: x86, build_config: Release }

    steps:
      - name: Checkout source
        uses: deep-soft/checkout@v4

      - name: Get program version
        continue-on-error: false
        shell: bash
        run: |
          Prog_version=${{ env.Prog_version}}
          echo $Prog_Version

      - name: Print program version
        continue-on-error: false
        shell: bash
        run: |
          echo "Print program version"
          echo ${{ env.Prog_Version }}

#      - name: Set MSVC environment
#        uses: deep-soft/msvc-dev-cmd@v1
#        with:
#          arch: ${{ matrix.arch }}

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.2.0

      - name: Restore NuGet packages
        run:
          nuget restore AudioSwitcher.sln

      - name: Build (cl)
        working-directory: src
        #  msbuild -m /property:Configuration=${{ matrix.build_config }} /property:Platform=${{ matrix.platform_sln }} AudioSwitcher.sln
        run: |
          msbuild -m /property:Configuration=${{ matrix.build_config }} /property:Platform=${{ matrix.platform_sln }} AudioSwitcher.sln

      - name: Sign Windows exe and dll files
        continue-on-error: true
        uses: deep-soft/code-sign-action@v9
        with:
          certificate: '${{ secrets.WINDOWS_PFX_BASE64 }}'
          password: '${{ secrets.WINDOWS_PFX_PASSWORD }}'
          certificatesha1: '${{ secrets.WINDOWS_PFX_SHA1_THUMBPRINT }}'
          # certificatename: '${{ secrets.CERTNAME }}'
          folder: 'release/${{ matrix.build_config }}'
          recursive: true

      - name: Create Zip Archive Release
        if: matrix.build_config  == 'Release'
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: '${{ env.PROG_NAME }}.${{ matrix.platform_sln }}.${{ env.Prog_Version }}.zip'
          directory: 'release/${{ matrix.build_config }}'
          exclusions: '*.map *.pdb'
          recursive_exclusions: '*.map *.pdb changelog'
          path: '.'

      - name: Upload zip
        if: matrix.build_config  == 'Release'
        continue-on-error: true
        uses: deep-soft/upload-artifact@v4
        with:
          name: ${{ env.PROG_NAME }}.${{ matrix.platform_name }}.${{ env.Prog_Version }}.zip
          #path: _build/vc/_output/product/${{ matrix.build_config }}.${{ matrix.platform_sln }}/${{ env.PROG_NAME }}.${{ matrix.build_config }}.${{ matrix.platform_sln }}.${{ env.Prog_Version }}.zip
          path: ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Publish
        if: matrix.build_config  == 'Release'
        continue-on-error: true
        uses: deep-soft/action-gh-release@v2.1
        with:
          tag_name: ${{ env.TAG_NAME }}-${{ env.Prog_Version }}
#          files: |
#            ${{ env.LIST_File }}
          files: |
            ${{ env.ZIP_RELEASE_ARCHIVE }}
